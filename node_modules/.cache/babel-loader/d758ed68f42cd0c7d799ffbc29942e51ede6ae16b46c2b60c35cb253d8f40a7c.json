{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bball\\\\streamlist\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/streamlist.css\"; // Import StreamList styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StreamList() {\n  _s();\n  const [events, setEvents] = useState([]); // State to hold events\n  const [newEvent, setNewEvent] = useState(\"\"); // State for new event input\n  const [editIndex, setEditIndex] = useState(null); // State to track which event is being edited\n  const [editEvent, setEditEvent] = useState(\"\"); // State for edited event input\n\n  const handleAddEvent = () => {\n    if (newEvent) {\n      setEvents([...events, newEvent]);\n      setNewEvent(\"\"); // Clear input after adding event\n    }\n  };\n  const handleEditEvent = index => {\n    setEditIndex(index); // Set the event that is being edited\n    setEditEvent(events[index]); // Set the value of that event in the input field\n  };\n  const handleSaveEdit = () => {\n    if (editEvent) {\n      const updatedEvents = [...events];\n      updatedEvents[editIndex] = editEvent; // Update the event at the specified index\n      setEvents(updatedEvents); // Set the updated events list\n      setEditIndex(null); // Reset the editIndex after saving\n      setEditEvent(\"\"); // Clear the edit input\n    }\n  };\n  const handleDeleteEvent = eventToDelete => {\n    setEvents(events.filter(event => event !== eventToDelete)); // Filter out the deleted event\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"streamlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"StreamList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newEvent,\n      onChange: e => setNewEvent(e.target.value),\n      placeholder: \"Add new event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddEvent,\n      children: \"Add Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), editIndex !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editEvent,\n        onChange: e => setEditEvent(e.target.value),\n        placeholder: \"Edit event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveEdit,\n        children: \"Save Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [event, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditEvent(index),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteEvent(event),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(StreamList, \"ZXhd5i+oFvlRR0Ktct4PvVx7zlk=\");\n_c = StreamList;\nexport default StreamList;\nvar _c;\n$RefreshReg$(_c, \"StreamList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","StreamList","_s","events","setEvents","newEvent","setNewEvent","editIndex","setEditIndex","editEvent","setEditEvent","handleAddEvent","handleEditEvent","index","handleSaveEdit","updatedEvents","handleDeleteEvent","eventToDelete","filter","event","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/bball/streamlist/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/streamlist.css\"; // Import StreamList styles\r\n\r\nfunction StreamList() {\r\n  const [events, setEvents] = useState([]); // State to hold events\r\n  const [newEvent, setNewEvent] = useState(\"\"); // State for new event input\r\n  const [editIndex, setEditIndex] = useState(null); // State to track which event is being edited\r\n  const [editEvent, setEditEvent] = useState(\"\"); // State for edited event input\r\n\r\n  const handleAddEvent = () => {\r\n    if (newEvent) {\r\n      setEvents([...events, newEvent]);\r\n      setNewEvent(\"\"); // Clear input after adding event\r\n    }\r\n  };\r\n\r\n  const handleEditEvent = (index) => {\r\n    setEditIndex(index); // Set the event that is being edited\r\n    setEditEvent(events[index]); // Set the value of that event in the input field\r\n  };\r\n\r\n  const handleSaveEdit = () => {\r\n    if (editEvent) {\r\n      const updatedEvents = [...events];\r\n      updatedEvents[editIndex] = editEvent; // Update the event at the specified index\r\n      setEvents(updatedEvents); // Set the updated events list\r\n      setEditIndex(null); // Reset the editIndex after saving\r\n      setEditEvent(\"\"); // Clear the edit input\r\n    }\r\n  };\r\n\r\n  const handleDeleteEvent = (eventToDelete) => {\r\n    setEvents(events.filter((event) => event !== eventToDelete)); // Filter out the deleted event\r\n  };\r\n\r\n  return (\r\n    <div className=\"streamlist\">\r\n      <h1>StreamList</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={newEvent}\r\n        onChange={(e) => setNewEvent(e.target.value)}\r\n        placeholder=\"Add new event\"\r\n      />\r\n      <button onClick={handleAddEvent}>Add Event</button>\r\n      {editIndex !== null && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={editEvent}\r\n            onChange={(e) => setEditEvent(e.target.value)}\r\n            placeholder=\"Edit event\"\r\n          />\r\n          <button onClick={handleSaveEdit}>Save Edit</button>\r\n        </div>\r\n      )}\r\n      <ul>\r\n        {events.map((event, index) => (\r\n          <li key={index}>\r\n            {event}{\" \"}\r\n            <button onClick={() => handleEditEvent(index)}>Edit</button>\r\n            <button onClick={() => handleDeleteEvent(event)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StreamList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}