{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bball\\\\streamlist\\\\src\\\\pages\\\\MovieSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"../components/MovieCard\";\nimport SearchBar from \"../components/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieSearch() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const fetchMovies = async () => {\n    if (!query) return;\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_TMDB_BASE_URL}/search/movie`, {\n        params: {\n          api_key: process.env.REACT_APP_TMDB_API_KEY,\n          query: query\n        }\n      });\n      setMovies(response.data.results);\n      localStorage.setItem(\"movies\", JSON.stringify(response.data.results));\n    } catch (error) {\n      console.error(\"Error fetching movies:\", error);\n    }\n  };\n  useEffect(() => {\n    const savedMovies = localStorage.getItem(\"movies\");\n    if (savedMovies) setMovies(JSON.parse(savedMovies));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      query: query,\n      setQuery: setQuery,\n      fetchMovies: fetchMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSearch, \"xxRUyF+Y1hiG6NWt6UEO8Ol8Kbs=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","axios","MovieCard","SearchBar","jsxDEV","_jsxDEV","MovieSearch","_s","query","setQuery","movies","setMovies","fetchMovies","response","get","process","env","REACT_APP_TMDB_BASE_URL","params","api_key","REACT_APP_TMDB_API_KEY","data","results","localStorage","setItem","JSON","stringify","error","console","savedMovies","getItem","parse","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","movie","id","_c","$RefreshReg$"],"sources":["C:/Users/bball/streamlist/src/pages/MovieSearch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport MovieCard from \"../components/MovieCard\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nfunction MovieSearch() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const fetchMovies = async () => {\r\n    if (!query) return;\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_TMDB_BASE_URL}/search/movie`,\r\n        {\r\n          params: {\r\n            api_key: process.env.REACT_APP_TMDB_API_KEY,\r\n            query: query,\r\n          },\r\n        }\r\n      );\r\n      setMovies(response.data.results);\r\n      localStorage.setItem(\"movies\", JSON.stringify(response.data.results));\r\n    } catch (error) {\r\n      console.error(\"Error fetching movies:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const savedMovies = localStorage.getItem(\"movies\");\r\n    if (savedMovies) setMovies(JSON.parse(savedMovies));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Search Movies</h1>\r\n      <SearchBar query={query} setQuery={setQuery} fetchMovies={fetchMovies} />\r\n      <div className=\"movie-list\">\r\n        {movies.map((movie) => (\r\n          <MovieCard key={movie.id} movie={movie} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieSearch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACJ,KAAK,EAAE;IAEZ,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAC9B,GAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB,eAAe,EACrD;QACEC,MAAM,EAAE;UACNC,OAAO,EAAEJ,OAAO,CAACC,GAAG,CAACI,sBAAsB;UAC3CZ,KAAK,EAAEA;QACT;MACF,CACF,CAAC;MACDG,SAAS,CAACE,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAAC;MAChCC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACb,QAAQ,CAACQ,IAAI,CAACC,OAAO,CAAC,CAAC;IACvE,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED3B,SAAS,CAAC,MAAM;IACd,MAAM6B,WAAW,GAAGN,YAAY,CAACO,OAAO,CAAC,QAAQ,CAAC;IAClD,IAAID,WAAW,EAAElB,SAAS,CAACc,IAAI,CAACM,KAAK,CAACF,WAAW,CAAC,CAAC;EACrD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB/B,OAAA,CAACF,SAAS;MAACK,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA,QAAS;MAACG,WAAW,EAAEA;IAAY;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzE/B,OAAA;MAAKgC,SAAS,EAAC,YAAY;MAAAL,QAAA,EACxBtB,MAAM,CAAC4B,GAAG,CAAEC,KAAK,iBAChBlC,OAAA,CAACH,SAAS;QAAgBqC,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7B,EAAA,CAxCQD,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AA0CpB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}